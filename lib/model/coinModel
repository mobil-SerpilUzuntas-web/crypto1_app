import 'dart:convert';


List<CoinModel> coinModelFromJson(String str) => 
  List<CoinModel>.from(json.decode(str).map((x)=> 
  CoinModel.fromJson(x)));


String coinModelToJson(List<CoinModel> data) => 
json.encode(List<dynamic>.from(data.map((x)=> 
x.toJson())));  

class CoinModel {
  String? id;
  String? symbol;
  String? name;
  String? image;
  double? currentPrice;
  double? marketCap;
  double? marketCapRank;
  double? fullyDilutedValuation;
  double? totalVolume;
  double? high24H;
  double? low24H;
  double? priceChange24H;
  double? priceChangePercentage24H;
  double? marketCapChange24H;
  double? marketCapChangePercentage24H;
  double? circulatingSupply;
  double? totalSupply;
  double? maxSupply;
  double? ath;
  double? athChangePercentage;
  String? athDate;
  double? atl;
  double? atlChangePercentage;
  String? atlDate;
  dynamic roi;
  String? lastUpdated;
  SparklineIn7D? sparklineIn7D;

  CoinModel({
    this.id,
    this.symbol,
    this.name,
    this.image,
    this.currentPrice,
    this.marketCap,
    this.marketCapRank,
    this.fullyDilutedValuation,
    this.totalVolume,
    this.high24H,
    this.low24H,
    this.priceChange24H,
    this.priceChangePercentage24H,
    this.marketCapChange24H,
    this.marketCapChangePercentage24H,
    this.circulatingSupply,
    this.totalSupply,
    this.maxSupply,
    this.ath,
    this.athChangePercentage,
    this.athDate,
    this.atl,
    this.atlChangePercentage,
    this.atlDate,
    this.roi,
    this.lastUpdated,
    this.sparklineIn7D,
  });

  factory CoinModel.fromJson(Map<String, dynamic> json) => CoinModel(
        id: json["id"],
        symbol: json["symbol"],
        name: json["name"],
        image: json["image"],
        currentPrice: (json["current_price"]as num?)?.toDouble(),
        marketCap: (json["market_cap"] as num?)?.toDouble(),
        marketCapRank: (json["market_cap_rank"] as num?)?.toDouble(),
        fullyDilutedValuation:
            (json["fully_diluted_valuation"] as num?)?.toDouble(),
        totalVolume: (json["total_volume"] as num?)?.toDouble(),
        high24H: (json["high_24h"] as num?)?.toDouble(),
        low24H: (json["low_24h"] as num?)?.toDouble(),
        priceChange24H: (json["price_change_24h"] as num?)?.toDouble(),
        priceChangePercentage24H:
            (json["price_change_percentage_24h"] as num?)?.toDouble(),
        marketCapChange24H: (json["market_cap_change_24h"] as num?)?.toDouble(),
        marketCapChangePercentage24H:
            (json["market_cap_change_percentage_24h"] as num?)?.toDouble(),
        circulatingSupply: (json["circulating_supply"] as num?)?.toDouble(),
        totalSupply: (json["total_supply"] as num?)?.toDouble(),
        maxSupply: (json["max_supply"] as num?)?.toDouble(),
        ath: (json["ath"] as num?)?.toDouble(),
        athChangePercentage:(json["ath_change_percentage"] as num?)?.toDouble(),
          
        athDate: json["ath_date"],
        atl: (json["atl"] as num?)?.toDouble(),
        atlChangePercentage:
            (json["atl_change_percentage"] as num?)?.toDouble(),
        atlDate: json["atl_date"],
        roi: json["roi"],
        lastUpdated: json["last_updated"],
        sparklineIn7D: SparklineIn7D.fromJson(json["sparkline_in_7d"]),
      );

  Map<String, dynamic> toJson() => { 
        "id": id,
        "symbol": symbol,
        "name": name,
        "image": image,
        "current_price": currentPrice,
        "market_cap": marketCap,
        "market_cap_rank": marketCapRank,
        "fully_diluted_valuation": fullyDilutedValuation,
        "total_volume": totalVolume,
        "high_24h": high24H,
        "low_24h": low24H,
        "price_change_24h": priceChange24H,
        "price_change_percentage_24h": priceChangePercentage24H,
        "market_cap_change_24h": marketCapChange24H,
        "market_cap_change_percentage_24h": marketCapChangePercentage24H,
        "circulating_supply": circulatingSupply,
        "total_supply": totalSupply,
        "max_supply": maxSupply,
        "ath": ath,
        "ath_change_percentage": athChangePercentage,
        "ath_date": athDate,
        "atl": atl,
        "atl_change_percentage": atlChangePercentage,
        "atl_date": atlDate,
        "roi": roi,
        "last_updated": lastUpdated,
        "sparkline_in_7d": sparklineIn7D?.toJson(),
      };
}


class SparklineIn7D {
  List<double>? price;

  SparklineIn7D({
    this.price,
  });

  factory SparklineIn7D.fromJson(Map<String, dynamic> json) => SparklineIn7D(
        price: json["price"] == null
            ? []
            : List<double>.from(json["price"].map((x) => x?.toDouble())),
      );

  Map<String, dynamic> toJson() => {
        "price": price == null ? [] : List<dynamic>.from(price!.map((x) => x)),
      };
}

/* class SparklineIn7D {
  List<double>? price;

  SparklineIn7D({
    this.price,
  });

  factory SparklineIn7D.fromJson(Map<String, dynamic> json) => SparklineIn7D(
        price: json["price"] == null
            ? []
            : List<double>.from(json["price"]!.map((x) => x?.toDouble())),
      );

  Map<String, dynamic> toJson() => {
        "price": price == null ? [] : List<dynamic>.from(price!.map((x) => x)),
      };
} */





/*



List<CoinModel> coinModelFromJson(String str) =>
    List<CoinModel>.from(json.decode(str).map((x) => CoinModel.fromJson(x)));

String coinModelToJson(List<CoinModel> data) =>
    json.encode(List<dynamic>.from(data.map((x) => x.toJson())));



 import 'dart:convert';
 
List<CoinModel> coinModelFromJson(String str) => List<CoinModel>.from(json.decode(str).map(x) => CoinModel.fromJson(x)));

String coinModelToJson(List<CoinModel> data) => json.encode(List<dynamic>.from(data.map((x)=> x.toJson())));  

class CoinModel {
    String? id;
    String? symbol;
    String? name;
    String? image;
    double? currentPrice;
    double? marketCap;
    double? marketCapRank;
    double? fullyDilutedValuation;
    double? totalVolume;
    double? high24H;
    double? low24H;
    double? priceChange24H;
    double? priceChangePercentage24H;
    double? marketCapChange24H;
    double? marketCapChangePercentage24H;
    double? circulatingSupply;
    double? totalSupply;
    double? maxSupply;
    double? ath;
    double? athChangePercentage;
    String? athDate;
    double? atl;
    double? atlChangePercentage;
    String? atlDate;
    dynamic roi;
    String? lastUpdated;
    SparklineIn7D? sparklineIn7D;

    CoinModel({
        this.id,
        this.symbol,
        this.name,
        this.image,
        this.currentPrice,
        this.marketCap,
        this.marketCapRank,
        this.fullyDilutedValuation,
        this.totalVolume,
        this.high24H,
        this.low24H,
        this.priceChange24H,
        this.priceChangePercentage24H,
        this.marketCapChange24H,
        this.marketCapChangePercentage24H,
        this.circulatingSupply,
        this.totalSupply,
        this.maxSupply,
        this.ath,
        this.athChangePercentage,
        this.athDate,
        this.atl,
        this.atlChangePercentage,
        this.atlDate,
        this.roi,
        this.lastUpdated,
        this.sparklineIn7D,
    });

 factory CoinModel.fromJson(Map<String, dynamic> json) => CoinModel(
  id: json["id"],
  symbol: json["symbol"],
  name: json["name"],
  image: json["image"],
  currentPrice: (json["current_price"] as num?)?.toDouble(),
  marketCap: (json["market_cap"] as num?)?.toDouble(),
  marketCapRank: (json["market_cap_rank"] as num?)?.toDouble(),
  fullyDilutedValuation: (json["fully_diluted_valuation"] as num?)?.toDouble(),
  totalVolume: (json["total_volume"] as num?)?.toDouble(),
  high24H: (json["high_24h"] as num?)?.toDouble(),
  low24H: (json["low_24h"] as num?)?.toDouble(),
  priceChange24H: (json["price_change_24h"] as num?)?.toDouble(),
  priceChangePercentage24H: (json["price_change_percentage_24h"] as num?)?.toDouble(),
  marketCapChange24H: (json["market_cap_change_24h"] as num?)?.toDouble(),
  marketCapChangePercentage24H: (json["market_cap_change_percentage_24h"] as num?)?.toDouble(),
  circulatingSupply: (json["circulating_supply"] as num?)?.toDouble(),
  totalSupply: (json["total_supply"] as num?)?.toDouble(),
  maxSupply: (json["max_supply"] as num?)?.toDouble(),
  ath: (json["ath"] as num?)?.toDouble(),
  athChangePercentage: (json["ath_change_percentage"] as num?)?.toDouble(),
  athDate: json["ath_date"],
  atl: (json["atl"] as num?)?.toDouble(),
  atlChangePercentage: (json["atl_change_percentage"] as num?)?.toDouble(),
  atlDate: json["atl_date"],
  roi: json["roi"],
  lastUpdated: json["last_updated"],
  sparklineIn7D: json["sparkline_in_7d"] == null ? null : SparklineIn7D.fromJson(json["sparkline_in_7d"]),
); 

    Map<String, dynamic> toJson() => {
        "id": id,
        "symbol": symbol,
        "name": name,
        "image": image,
        "current_price": currentPrice,
        "market_cap": marketCap,
        "market_cap_rank": marketCapRank,
        "fully_diluted_valuation": fullyDilutedValuation,
        "total_volume": totalVolume,
        "high_24h": high24H,
        "low_24h": low24H,
        "price_change_24h": priceChange24H,
        "price_change_percentage_24h": priceChangePercentage24H,
        "market_cap_change_24h": marketCapChange24H,
        "market_cap_change_percentage_24h": marketCapChangePercentage24H,
        "circulating_supply": circulatingSupply,
        "total_supply": totalSupply,
        "max_supply": maxSupply,
        "ath": ath,
        "ath_change_percentage": athChangePercentage,
        "ath_date": athDate,
        "atl": atl,
        "atl_change_percentage": atlChangePercentage,
        "atl_date": atlDate,
        "roi": roi,
        "last_updated": lastUpdated,
        "sparkline_in_7d": sparklineIn7D?.toJson(),
    };
}

class SparklineIn7D {
    List<double>? price;

    SparklineIn7D({
        this.price,
    });

    factory SparklineIn7D.fromJson(Map<String, dynamic> json) => SparklineIn7D(
        price: json["price"] == null ? [] : List<double>.from(json["price"]!.map((x) => x?.toDouble())),
    );

    Map<String, dynamic> toJson() => {
        "price": price == null ? [] : List<dynamic>.from(price!.map((x) => x)),
    };
}
 */




